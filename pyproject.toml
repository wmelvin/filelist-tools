[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "filelist-tools"
dynamic = ["version"]
description = 'Tools for making and working with a filelist (an inventory of files in a given location).'
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE"}
keywords = [ "catalog", "filelist", "filelist-tools"]

authors = [
  { name = "Bill Melvin", email = "bill@billmelvin.com" },
]
dependencies = []


[project.urls]
Source = "https://github.com/wmelvin/filelist-tools"
# Documentation = "https://github.com/wmelvin/filelist-tools#readme"
# Issues = "https://github.com/wmelvin/filelist-tools/issues"

[project.scripts]
mkfilelist = "make_filelist:mkfilelist.main"
filelist_export = "export_filelist:filelist_export.main"
filelist_merge = "merge_filelist:filelist_merge.main"

# [tool.setuptools.dynamic]
# version = {attr = "make_filelist/__about__.__version__"}

# [tool.setuptools.packages.find]
# where = ["src"]
# namespaces = false

[tool.pytest.ini_options]
pythonpath = ["src"]

[tool.hatch.version]
path = "src/make_filelist/__about__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/make_filelist", "src/export_filelist", "src/merge_filelist"]

[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
]
[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov = [
  "test-cov",
  "cov-report",
]

[[tool.hatch.envs.test.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]

[[tool.hatch.envs.all.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]

[tool.hatch.envs.test]
dependencies = [
  "pytest"
]

[tool.hatch.envs.types]
dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/make_filelist tests}"

[tool.coverage.run]
source_pkgs = ["make_filelist", "tests"]
branch = true
parallel = true
omit = [
  "src/make_filelist/__about__.py",
]

[tool.coverage.paths]
make_filelist = ["src/make_filelist", "*/filelist-query/src/make_filelist"]
tests = ["tests", "*/filelist-query/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.ruff]
line-length = 88
indent-width = 4

[tool.ruff.lint]
select = [
    "A",    # flake8-builtins
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "E",    # pycodestyle errors
    "F",    # Pyfakes
    "FA",   # flake8-future-annotations
    "I",    # isort
    "ISC",  # flake8-implicit-str-concat
    "PERF", # Perflint
    "PL",   # Pylint
    "PTH",  # flake8-use-pathlib
    "PYI",  # flake8-pyi
    "RET",  # flake8-return
    "S",    # flake8-bandit
    "SIM",  # flake8-simplify
    "W"     # Warning
]
# extend-select = ["ALL"]
ignore = [
    "ISC001",  # single-line-implicit-string-concatenation
    "PLR2004", # magic value
]

[tool.ruff.lint.per-file-ignores]
"**/test_*.py" = [
    "S101", # assert
]
